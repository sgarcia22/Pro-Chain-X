{
    "contractName": "NftShop",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "ids",
                    "type": "uint256[]"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "values",
                    "type": "uint256[]"
                }
            ],
            "name": "TransferBatch",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "TransferSingle",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "value",
                    "type": "string"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                }
            ],
            "name": "URI",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "accounts",
                    "type": "address[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "ids",
                    "type": "uint256[]"
                }
            ],
            "name": "balanceOfBatch",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "mintNFT",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "price",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256[]",
                    "name": "ids",
                    "type": "uint256[]"
                },
                {
                    "internalType": "uint256[]",
                    "name": "amounts",
                    "type": "uint256[]"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeBatchTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_price",
                    "type": "uint256"
                }
            ],
            "name": "setPrice",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "uri",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/contracts/MintArenaAccessNFT.sol\":\"NftShop\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/contracts/MintArenaAccessNFT.sol\":{\"keccak256\":\"0x285c62184e1e5d60c3fb11a96c0e153dd678664c632ee2eb30c4f0ae6a7d2934\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://173df47b97f5e6ef900f568eeb2d528377f598092b4d1078464a086ca9e387a8\",\"dweb:/ipfs/QmWY72Jx7tjMrPAbXrHW2nHSBDqKQWmWv525Jh7t4hgfa4\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
    "bytecode": "6080604052662386f26fc100006004553480156200001c57600080fd5b50604080516020810190915260008152620000378162000049565b5062000043336200005b565b6200021e565b600262000057828262000152565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000d857607f821691505b602082108103620000f957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014d57600081815260208120601f850160051c81016020861015620001285750805b601f850160051c820191505b81811015620001495782815560010162000134565b5050505b505050565b81516001600160401b038111156200016e576200016e620000ad565b62000186816200017f8454620000c3565b84620000ff565b602080601f831160018114620001be5760008415620001a55750858301515b600019600386901b1c1916600185901b17855562000149565b600085815260208120601f198616915b82811015620001ef57888601518255948401946001909101908401620001ce565b50858210156200020e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118cb806200022e6000396000f3fe6080604052600436106100dc5760003560e01c806391b7f5ed1161007f578063a22cb46511610059578063a22cb46514610246578063e985e9c514610266578063f242432a146102af578063f2fde38b146102cf57600080fd5b806391b7f5ed146101fd5780639224a33f1461021d578063a035b1fe1461023057600080fd5b80632eb2c2d6116100bb5780632eb2c2d6146101715780634e1273f414610193578063715018a6146101c05780638da5cb5b146101d557600080fd5b8062fdd58e146100e157806301ffc9a7146101145780630e89341c14610144575b600080fd5b3480156100ed57600080fd5b506101016100fc366004611046565b6102ef565b6040519081526020015b60405180910390f35b34801561012057600080fd5b5061013461012f366004611086565b610386565b604051901515815260200161010b565b34801561015057600080fd5b5061016461015f3660046110aa565b6103d8565b60405161010b9190611110565b34801561017d57600080fd5b5061019161018c36600461126f565b61046c565b005b34801561019f57600080fd5b506101b36101ae366004611319565b610503565b60405161010b919061141f565b3480156101cc57600080fd5b5061019161062d565b3480156101e157600080fd5b506003546040516001600160a01b03909116815260200161010b565b34801561020957600080fd5b506101916102183660046110aa565b610663565b61019161022b366004611432565b610692565b34801561023c57600080fd5b5061010160045481565b34801561025257600080fd5b5061019161026136600461146f565b61074f565b34801561027257600080fd5b506101346102813660046114ab565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b3480156102bb57600080fd5b506101916102ca3660046114de565b61075a565b3480156102db57600080fd5b506101916102ea366004611543565b6107e1565b60006001600160a01b0383166103605760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103b757506001600160e01b031982166303a24d0760e21b145b806103d257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103e79061155e565b80601f01602080910402602001604051908101604052809291908181526020018280546104139061155e565b80156104605780601f1061043557610100808354040283529160200191610460565b820191906000526020600020905b81548152906001019060200180831161044357829003601f168201915b50505050509050919050565b6001600160a01b03851633148061048857506104888533610281565b6104ef5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b6064820152608401610357565b6104fc858585858561087c565b5050505050565b606081518351146105685760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610357565b6000835167ffffffffffffffff81111561058457610584611123565b6040519080825280602002602001820160405280156105ad578160200160208202803683370190505b50905060005b8451811015610625576105f88582815181106105d1576105d1611598565b60200260200101518583815181106105eb576105eb611598565b60200260200101516102ef565b82828151811061060a5761060a611598565b602090810291909101015261061e816115c4565b90506105b3565b509392505050565b6003546001600160a01b031633146106575760405162461bcd60e51b8152600401610357906115dd565b6106616000610a59565b565b6003546001600160a01b0316331461068d5760405162461bcd60e51b8152600401610357906115dd565b600455565b61069c33836102ef565b6000036106eb5760405162461bcd60e51b815260206004820152601d60248201527f455243313135353a20746f6b656e20616c7265616479206d696e7465640000006044820152606401610357565b60045434101561073d5760405162461bcd60e51b815260206004820181905260248201527f4e6f7420656e6f75676820657468657220666f72207472616e73616374696f6e6044820152606401610357565b61074b336000600184610aab565b5050565b61074b338383610bbf565b6001600160a01b03851633148061077657506107768533610281565b6107d45760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610357565b6104fc8585858585610c9f565b6003546001600160a01b0316331461080b5760405162461bcd60e51b8152600401610357906115dd565b6001600160a01b0381166108705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610357565b61087981610a59565b50565b81518351146108de5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610357565b6001600160a01b0384166109045760405162461bcd60e51b815260040161035790611612565b3360005b84518110156109eb57600085828151811061092557610925611598565b60200260200101519050600085838151811061094357610943611598565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156109935760405162461bcd60e51b815260040161035790611657565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906109d09084906116a1565b92505081905550505050806109e4906115c4565b9050610908565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a3b9291906116b9565b60405180910390a4610a51818787878787610dc9565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610b0b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610357565b336000610b1785610f24565b90506000610b2485610f24565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610b569084906116a1565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610bb683600089898989610f6f565b50505050505050565b816001600160a01b0316836001600160a01b031603610c325760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610357565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610cc55760405162461bcd60e51b815260040161035790611612565b336000610cd185610f24565b90506000610cde85610f24565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610d215760405162461bcd60e51b815260040161035790611657565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610d5e9084906116a1565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610dbe848a8a8a8a8a610f6f565b505050505050505050565b6001600160a01b0384163b15610a515760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610e0d90899089908890889088906004016116e7565b6020604051808303816000875af1925050508015610e48575060408051601f3d908101601f19168201909252610e4591810190611745565b60015b610ef457610e54611762565b806308c379a003610e8d5750610e6861177e565b80610e735750610e8f565b8060405162461bcd60e51b81526004016103579190611110565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610357565b6001600160e01b0319811663bc197c8160e01b14610bb65760405162461bcd60e51b815260040161035790611808565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610f5e57610f5e611598565b602090810291909101015292915050565b6001600160a01b0384163b15610a515760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610fb39089908990889088908890600401611850565b6020604051808303816000875af1925050508015610fee575060408051601f3d908101601f19168201909252610feb91810190611745565b60015b610ffa57610e54611762565b6001600160e01b0319811663f23a6e6160e01b14610bb65760405162461bcd60e51b815260040161035790611808565b80356001600160a01b038116811461104157600080fd5b919050565b6000806040838503121561105957600080fd5b6110628361102a565b946020939093013593505050565b6001600160e01b03198116811461087957600080fd5b60006020828403121561109857600080fd5b81356110a381611070565b9392505050565b6000602082840312156110bc57600080fd5b5035919050565b6000815180845260005b818110156110e9576020818501810151868301820152016110cd565b818111156110fb576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006110a360208301846110c3565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561115f5761115f611123565b6040525050565b600067ffffffffffffffff82111561118057611180611123565b5060051b60200190565b600082601f83011261119b57600080fd5b813560206111a882611166565b6040516111b58282611139565b83815260059390931b85018201928281019150868411156111d557600080fd5b8286015b848110156111f057803583529183019183016111d9565b509695505050505050565b600082601f83011261120c57600080fd5b813567ffffffffffffffff81111561122657611226611123565b60405161123d601f8301601f191660200182611139565b81815284602083860101111561125257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561128757600080fd5b6112908661102a565b945061129e6020870161102a565b9350604086013567ffffffffffffffff808211156112bb57600080fd5b6112c789838a0161118a565b945060608801359150808211156112dd57600080fd5b6112e989838a0161118a565b935060808801359150808211156112ff57600080fd5b5061130c888289016111fb565b9150509295509295909350565b6000806040838503121561132c57600080fd5b823567ffffffffffffffff8082111561134457600080fd5b818501915085601f83011261135857600080fd5b8135602061136582611166565b6040516113728282611139565b83815260059390931b850182019282810191508984111561139257600080fd5b948201945b838610156113b7576113a88661102a565b82529482019490820190611397565b965050860135925050808211156113cd57600080fd5b506113da8582860161118a565b9150509250929050565b600081518084526020808501945080840160005b83811015611414578151875295820195908201906001016113f8565b509495945050505050565b6020815260006110a360208301846113e4565b6000806040838503121561144557600080fd5b82359150602083013567ffffffffffffffff81111561146357600080fd5b6113da858286016111fb565b6000806040838503121561148257600080fd5b61148b8361102a565b9150602083013580151581146114a057600080fd5b809150509250929050565b600080604083850312156114be57600080fd5b6114c78361102a565b91506114d56020840161102a565b90509250929050565b600080600080600060a086880312156114f657600080fd5b6114ff8661102a565b945061150d6020870161102a565b93506040860135925060608601359150608086013567ffffffffffffffff81111561153757600080fd5b61130c888289016111fb565b60006020828403121561155557600080fd5b6110a38261102a565b600181811c9082168061157257607f821691505b60208210810361159257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016115d6576115d66115ae565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156116b4576116b46115ae565b500190565b6040815260006116cc60408301856113e4565b82810360208401526116de81856113e4565b95945050505050565b6001600160a01b0386811682528516602082015260a060408201819052600090611713908301866113e4565b828103606084015261172581866113e4565b9050828103608084015261173981856110c3565b98975050505050505050565b60006020828403121561175757600080fd5b81516110a381611070565b600060033d111561177b5760046000803e5060005160e01c5b90565b600060443d101561178c5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156117bc57505050505090565b82850191508151818111156117d45750505050505090565b843d87010160208285010111156117ee5750505050505090565b6117fd60208286010187611139565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061188a908301846110c3565b97965050505050505056fea2646970667358221220b008b7da727439586b2698595c91431f787f65a18f0d3782b93ff9489a24a41964736f6c634300080f0033",
    "deployedBytecode": "",
    "sourceMap": "415:617:0:-:0;;;482:10;459:33;;500:29;;;;;;;;;-1:-1:-1;1107:62:2;;;;;;;;;-1:-1:-1;1107:62:2;;1149:13;1107:62;1149:7;:13::i;:::-;-1:-1:-1;921:32:1;719:10:7;921:18:1;:32::i;:::-;415:617:0;;8171:86:2;8237:4;:13;8244:6;8237:4;:13;:::i;:::-;;8171:86;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:10;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:10;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:10;;;2580:26;2531:89;-1:-1:-1;;1335:1:10;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:10;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:10;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:10;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:10:o;:::-;415:617:0;;;;;;",
    "deployedSourceMap": "415:617:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2185:228:2;;;;;;;;;;-1:-1:-1;2185:228:2;;;;;:::i;:::-;;:::i;:::-;;;597:25:10;;;585:2;570:18;2185:228:2;;;;;;;;1236:305;;;;;;;;;;-1:-1:-1;1236:305:2;;;;;:::i;:::-;;:::i;:::-;;;1184:14:10;;1177:22;1159:41;;1147:2;1132:18;1236:305:2;1019:187:10;1940:103:2;;;;;;;;;;-1:-1:-1;1940:103:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4060:430::-;;;;;;;;;;-1:-1:-1;4060:430:2;;;;;:::i;:::-;;:::i;:::-;;2570:508;;;;;;;;;;-1:-1:-1;2570:508:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1668:101:1:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1108:6:1;;1036:85;;-1:-1:-1;;;;;1108:6:1;;;6974:51:10;;6962:2;6947:18;1036:85:1;6828:203:10;536:81:0;;;;;;;;;;-1:-1:-1;536:81:0;;;;;:::i;:::-;;:::i;624:405::-;;;;;;:::i;:::-;;:::i;459:33::-;;;;;;;;;;;;;;;;3146:153:2;;;;;;;;;;-1:-1:-1;3146:153:2;;;;;:::i;:::-;;:::i;3366:166::-;;;;;;;;;;-1:-1:-1;3366:166:2;;;;;:::i;:::-;-1:-1:-1;;;;;3488:27:2;;;3465:4;3488:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3366:166;3599:389;;;;;;;;;;-1:-1:-1;3599:389:2;;;;;:::i;:::-;;:::i;1918:198:1:-;;;;;;;;;;-1:-1:-1;1918:198:1;;;;;:::i;:::-;;:::i;2185:228:2:-;2271:7;-1:-1:-1;;;;;2298:21:2;;2290:77;;;;-1:-1:-1;;;2290:77:2;;9050:2:10;2290:77:2;;;9032:21:10;9089:2;9069:18;;;9062:30;9128:34;9108:18;;;9101:62;-1:-1:-1;;;9179:18:10;;;9172:41;9230:19;;2290:77:2;;;;;;;;;-1:-1:-1;2384:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2384:22:2;;;;;;;;;;;;2185:228::o;1236:305::-;1338:4;-1:-1:-1;;;;;;1373:41:2;;-1:-1:-1;;;1373:41:2;;:109;;-1:-1:-1;;;;;;;1430:52:2;;-1:-1:-1;;;1430:52:2;1373:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:8;;;1498:36:2;1354:180;1236:305;-1:-1:-1;;1236:305:2:o;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;4060:430::-;-1:-1:-1;;;;;4285:20:2;;719:10:7;4285:20:2;;:60;;-1:-1:-1;4309:36:2;4326:4;719:10:7;3366:166:2;:::i;4309:36::-;4264:157;;;;-1:-1:-1;;;4264:157:2;;9847:2:10;4264:157:2;;;9829:21:10;9886:2;9866:18;;;9859:30;9925:34;9905:18;;;9898:62;-1:-1:-1;;;9976:18:10;;;9969:48;10034:19;;4264:157:2;9645:414:10;4264:157:2;4431:52;4454:4;4460:2;4464:3;4469:7;4478:4;4431:22;:52::i;:::-;4060:430;;;;;:::o;2570:508::-;2721:16;2780:3;:10;2761:8;:15;:29;2753:83;;;;-1:-1:-1;;;2753:83:2;;10266:2:10;2753:83:2;;;10248:21:10;10305:2;10285:18;;;10278:30;10344:34;10324:18;;;10317:62;-1:-1:-1;;;10395:18:10;;;10388:39;10444:19;;2753:83:2;10064:405:10;2753:83:2;2847:30;2894:8;:15;2880:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2880:30:2;;2847:63;;2926:9;2921:120;2945:8;:15;2941:1;:19;2921:120;;;3000:30;3010:8;3019:1;3010:11;;;;;;;;:::i;:::-;;;;;;;3023:3;3027:1;3023:6;;;;;;;;:::i;:::-;;;;;;;3000:9;:30::i;:::-;2981:13;2995:1;2981:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2962:3;;;:::i;:::-;;;2921:120;;;-1:-1:-1;3058:13:2;2570:508;-1:-1:-1;;;2570:508:2:o;1668:101:1:-;1108:6;;-1:-1:-1;;;;;1108:6:1;719:10:7;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;536:81:0:-;1108:6:1;;-1:-1:-1;;;;;1108:6:1;719:10:7;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;596:5:0::1;:14:::0;536:81::o;624:405::-;761:30;771:10;783:7;761:9;:30::i;:::-;795:1;761:35;753:77;;;;-1:-1:-1;;;753:77:0;;11441:2:10;753:77:0;;;11423:21:10;11480:2;11460:18;;;11453:30;11519:31;11499:18;;;11492:59;11568:18;;753:77:0;11239:353:10;753:77:0;916:5;;903:9;:18;;895:63;;;;-1:-1:-1;;;895:63:0;;11799:2:10;895:63:0;;;11781:21:10;;;11818:18;;;11811:30;11877:34;11857:18;;;11850:62;11929:18;;895:63:0;11597:356:10;895:63:0;993:29;999:10;1011:1;1014;1017:4;993:5;:29::i;:::-;624:405;;:::o;3146:153:2:-;3240:52;719:10:7;3273:8:2;3283;3240:18;:52::i;3599:389::-;-1:-1:-1;;;;;3799:20:2;;719:10:7;3799:20:2;;:60;;-1:-1:-1;3823:36:2;3840:4;719:10:7;3366:166:2;:::i;3823:36::-;3778:148;;;;-1:-1:-1;;;3778:148:2;;12160:2:10;3778:148:2;;;12142:21:10;12199:2;12179:18;;;12172:30;12238:34;12218:18;;;12211:62;-1:-1:-1;;;12289:18:10;;;12282:39;12338:19;;3778:148:2;11958:405:10;3778:148:2;3936:45;3954:4;3960:2;3964;3968:6;3976:4;3936:17;:45::i;1918:198:1:-;1108:6;;-1:-1:-1;;;;;1108:6:1;719:10:7;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;12570:2:10;1998:73:1::1;::::0;::::1;12552:21:10::0;12609:2;12589:18;;;12582:30;12648:34;12628:18;;;12621:62;-1:-1:-1;;;12699:18:10;;;12692:36;12745:19;;1998:73:1::1;12368:402:10::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6233:1115:2:-;6453:7;:14;6439:3;:10;:28;6431:81;;;;-1:-1:-1;;;6431:81:2;;12977:2:10;6431:81:2;;;12959:21:10;13016:2;12996:18;;;12989:30;13055:34;13035:18;;;13028:62;-1:-1:-1;;;13106:18:10;;;13099:38;13154:19;;6431:81:2;12775:404:10;6431:81:2;-1:-1:-1;;;;;6530:16:2;;6522:66;;;;-1:-1:-1;;;6522:66:2;;;;;;;:::i;:::-;719:10:7;6599:16:2;6712:411;6736:3;:10;6732:1;:14;6712:411;;;6767:10;6780:3;6784:1;6780:6;;;;;;;;:::i;:::-;;;;;;;6767:19;;6800:14;6817:7;6825:1;6817:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6842:19;6864:13;;;;;;;;;;-1:-1:-1;;;;;6864:19:2;;;;;;;;;;;;6817:10;;-1:-1:-1;6905:21:2;;;;6897:76;;;;-1:-1:-1;;;6897:76:2;;;;;;;:::i;:::-;7015:9;:13;;;;;;;;;;;-1:-1:-1;;;;;7015:19:2;;;;;;;;;;7037:20;;;7015:42;;7085:17;;;;;;;:27;;7037:20;;7015:9;7085:27;;7037:20;;7085:27;:::i;:::-;;;;;;;;6753:370;;;6748:3;;;;:::i;:::-;;;6712:411;;;;7168:2;-1:-1:-1;;;;;7138:47:2;7162:4;-1:-1:-1;;;;;7138:47:2;7152:8;-1:-1:-1;;;;;7138:47:2;;7172:3;7177:7;7138:47;;;;;;;:::i;:::-;;;;;;;;7266:75;7302:8;7312:4;7318:2;7322:3;7327:7;7336:4;7266:35;:75::i;:::-;6421:927;6233:1115;;;;;:::o;2270:187:1:-;2362:6;;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;8630:709:2:-;-1:-1:-1;;;;;8777:16:2;;8769:62;;;;-1:-1:-1;;;8769:62:2;;14806:2:10;8769:62:2;;;14788:21:10;14845:2;14825:18;;;14818:30;14884:34;14864:18;;;14857:62;-1:-1:-1;;;14935:18:10;;;14928:31;14976:19;;8769:62:2;14604:397:10;8769:62:2;719:10:7;8842:16:2;8906:21;8924:2;8906:17;:21::i;:::-;8883:44;;8937:24;8964:25;8982:6;8964:17;:25::i;:::-;8937:52;;9077:9;:13;;;;;;;;;;;-1:-1:-1;;;;;9077:17:2;;;;;;;;;:27;;9098:6;;9077:9;:27;;9098:6;;9077:27;:::i;:::-;;;;-1:-1:-1;;9119:52:2;;;15180:25:10;;;15236:2;15221:18;;15214:34;;;-1:-1:-1;;;;;9119:52:2;;;;9152:1;;9119:52;;;;;;15153:18:10;9119:52:2;;;;;;;9258:74;9289:8;9307:1;9311:2;9315;9319:6;9327:4;9258:30;:74::i;:::-;8759:580;;;8630:709;;;;:::o;12773:323::-;12923:8;-1:-1:-1;;;;;12914:17:2;:5;-1:-1:-1;;;;;12914:17:2;;12906:71;;;;-1:-1:-1;;;12906:71:2;;15461:2:10;12906:71:2;;;15443:21:10;15500:2;15480:18;;;15473:30;15539:34;15519:18;;;15512:62;-1:-1:-1;;;15590:18:10;;;15583:39;15639:19;;12906:71:2;15259:405:10;12906:71:2;-1:-1:-1;;;;;12987:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12987:46:2;;;;;;;;;;13048:41;;1159::10;;;13048::2;;1132:18:10;13048:41:2;;;;;;;12773:323;;;:::o;4940:947::-;-1:-1:-1;;;;;5121:16:2;;5113:66;;;;-1:-1:-1;;;5113:66:2;;;;;;;:::i;:::-;719:10:7;5190:16:2;5254:21;5272:2;5254:17;:21::i;:::-;5231:44;;5285:24;5312:25;5330:6;5312:17;:25::i;:::-;5285:52;;5419:19;5441:13;;;;;;;;;;;-1:-1:-1;;;;;5441:19:2;;;;;;;;;;5478:21;;;;5470:76;;;;-1:-1:-1;;;5470:76:2;;;;;;;:::i;:::-;5580:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5580:19:2;;;;;;;;;;5602:20;;;5580:42;;5642:17;;;;;;;:27;;5602:20;;5580:9;5642:27;;5602:20;;5642:27;:::i;:::-;;;;-1:-1:-1;;5685:46:2;;;15180:25:10;;;15236:2;15221:18;;15214:34;;;-1:-1:-1;;;;;5685:46:2;;;;;;;;;;;;;;15153:18:10;5685:46:2;;;;;;;5812:68;5843:8;5853:4;5859:2;5863;5867:6;5875:4;5812:30;:68::i;:::-;5103:784;;;;4940:947;;;;;:::o;16127:792::-;-1:-1:-1;;;;;16359:13:2;;1465:19:6;:23;16355:558:2;;16394:79;;-1:-1:-1;;;16394:79:2;;-1:-1:-1;;;;;16394:43:2;;;;;:79;;16438:8;;16448:4;;16454:3;;16459:7;;16468:4;;16394:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16394:79:2;;;;;;;;-1:-1:-1;;16394:79:2;;;;;;;;;;;;:::i;:::-;;;16390:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16779:6;16772:14;;-1:-1:-1;;;16772:14:2;;;;;;;;:::i;16390:513::-;;;16826:62;;-1:-1:-1;;;16826:62:2;;17817:2:10;16826:62:2;;;17799:21:10;17856:2;17836:18;;;17829:30;17895:34;17875:18;;;17868:62;-1:-1:-1;;;17946:18:10;;;17939:50;18006:19;;16826:62:2;17615:416:10;16390:513:2;-1:-1:-1;;;;;;16552:60:2;;-1:-1:-1;;;16552:60:2;16548:157;;16636:50;;-1:-1:-1;;;16636:50:2;;;;;;;:::i;16925:193::-;17044:16;;;17058:1;17044:16;;;;;;;;;16991;;17019:22;;17044:16;;;;;;;;;;;;-1:-1:-1;17044:16:2;17019:41;;17081:7;17070:5;17076:1;17070:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17106:5;16925:193;-1:-1:-1;;16925:193:2:o;15396:725::-;-1:-1:-1;;;;;15603:13:2;;1465:19:6;:23;15599:516:2;;15638:72;;-1:-1:-1;;;15638:72:2;;-1:-1:-1;;;;;15638:38:2;;;;;:72;;15677:8;;15687:4;;15693:2;;15697:6;;15705:4;;15638:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15638:72:2;;;;;;;;-1:-1:-1;;15638:72:2;;;;;;;;;;;;:::i;:::-;;;15634:471;;;;:::i;:::-;-1:-1:-1;;;;;;15759:55:2;;-1:-1:-1;;;15759:55:2;15755:152;;15838:50;;-1:-1:-1;;;15838:50:2;;;;;;;:::i;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;633:131::-;-1:-1:-1;;;;;;707:32:10;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:10:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:10;;1211:180;-1:-1:-1;1211:180:10:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:10;1829:15;-1:-1:-1;;1825:29:10;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:10:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:10;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:10:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:10;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:10;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:10;2672:724;-1:-1:-1;;;;;;2672:724:10:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:10;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:10:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:10;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:10;;5952:32;;-1:-1:-1;;5996:16:10;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:10;;6122:435;-1:-1:-1;;;;;6122:435:10:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;7036:388::-;7113:6;7121;7174:2;7162:9;7153:7;7149:23;7145:32;7142:52;;;7190:1;7187;7180:12;7142:52;7226:9;7213:23;7203:33;;7287:2;7276:9;7272:18;7259:32;7314:18;7306:6;7303:30;7300:50;;;7346:1;7343;7336:12;7300:50;7369:49;7410:7;7401:6;7390:9;7386:22;7369:49;:::i;7429:347::-;7494:6;7502;7555:2;7543:9;7534:7;7530:23;7526:32;7523:52;;;7571:1;7568;7561:12;7523:52;7594:29;7613:9;7594:29;:::i;:::-;7584:39;;7673:2;7662:9;7658:18;7645:32;7720:5;7713:13;7706:21;7699:5;7696:32;7686:60;;7742:1;7739;7732:12;7686:60;7765:5;7755:15;;;7429:347;;;;;:::o;7781:260::-;7849:6;7857;7910:2;7898:9;7889:7;7885:23;7881:32;7878:52;;;7926:1;7923;7916:12;7878:52;7949:29;7968:9;7949:29;:::i;:::-;7939:39;;7997:38;8031:2;8020:9;8016:18;7997:38;:::i;:::-;7987:48;;7781:260;;;;;:::o;8046:606::-;8150:6;8158;8166;8174;8182;8235:3;8223:9;8214:7;8210:23;8206:33;8203:53;;;8252:1;8249;8242:12;8203:53;8275:29;8294:9;8275:29;:::i;:::-;8265:39;;8323:38;8357:2;8346:9;8342:18;8323:38;:::i;:::-;8313:48;;8408:2;8397:9;8393:18;8380:32;8370:42;;8459:2;8448:9;8444:18;8431:32;8421:42;;8514:3;8503:9;8499:19;8486:33;8542:18;8534:6;8531:30;8528:50;;;8574:1;8571;8564:12;8528:50;8597:49;8638:7;8629:6;8618:9;8614:22;8597:49;:::i;8657:186::-;8716:6;8769:2;8757:9;8748:7;8744:23;8740:32;8737:52;;;8785:1;8782;8775:12;8737:52;8808:29;8827:9;8808:29;:::i;9260:380::-;9339:1;9335:12;;;;9382;;;9403:61;;9457:4;9449:6;9445:17;9435:27;;9403:61;9510:2;9502:6;9499:14;9479:18;9476:38;9473:161;;9556:10;9551:3;9547:20;9544:1;9537:31;9591:4;9588:1;9581:15;9619:4;9616:1;9609:15;9473:161;;9260:380;;;:::o;10474:127::-;10535:10;10530:3;10526:20;10523:1;10516:31;10566:4;10563:1;10556:15;10590:4;10587:1;10580:15;10606:127;10667:10;10662:3;10658:20;10655:1;10648:31;10698:4;10695:1;10688:15;10722:4;10719:1;10712:15;10738:135;10777:3;10798:17;;;10795:43;;10818:18;;:::i;:::-;-1:-1:-1;10865:1:10;10854:13;;10738:135::o;10878:356::-;11080:2;11062:21;;;11099:18;;;11092:30;11158:34;11153:2;11138:18;;11131:62;11225:2;11210:18;;10878:356::o;13184:401::-;13386:2;13368:21;;;13425:2;13405:18;;;13398:30;13464:34;13459:2;13444:18;;13437:62;-1:-1:-1;;;13530:2:10;13515:18;;13508:35;13575:3;13560:19;;13184:401::o;13590:406::-;13792:2;13774:21;;;13831:2;13811:18;;;13804:30;13870:34;13865:2;13850:18;;13843:62;-1:-1:-1;;;13936:2:10;13921:18;;13914:40;13986:3;13971:19;;13590:406::o;14001:128::-;14041:3;14072:1;14068:6;14065:1;14062:13;14059:39;;;14078:18;;:::i;:::-;-1:-1:-1;14114:9:10;;14001:128::o;14134:465::-;14391:2;14380:9;14373:21;14354:4;14417:56;14469:2;14458:9;14454:18;14446:6;14417:56;:::i;:::-;14521:9;14513:6;14509:22;14504:2;14493:9;14489:18;14482:50;14549:44;14586:6;14578;14549:44;:::i;:::-;14541:52;14134:465;-1:-1:-1;;;;;14134:465:10:o;15669:827::-;-1:-1:-1;;;;;16066:15:10;;;16048:34;;16118:15;;16113:2;16098:18;;16091:43;16028:3;16165:2;16150:18;;16143:31;;;15991:4;;16197:57;;16234:19;;16226:6;16197:57;:::i;:::-;16302:9;16294:6;16290:22;16285:2;16274:9;16270:18;16263:50;16336:44;16373:6;16365;16336:44;:::i;:::-;16322:58;;16429:9;16421:6;16417:22;16411:3;16400:9;16396:19;16389:51;16457:33;16483:6;16475;16457:33;:::i;:::-;16449:41;15669:827;-1:-1:-1;;;;;;;;15669:827:10:o;16501:249::-;16570:6;16623:2;16611:9;16602:7;16598:23;16594:32;16591:52;;;16639:1;16636;16629:12;16591:52;16671:9;16665:16;16690:30;16714:5;16690:30;:::i;16755:179::-;16790:3;16832:1;16814:16;16811:23;16808:120;;;16878:1;16875;16872;16857:23;-1:-1:-1;16915:1:10;16909:8;16904:3;16900:18;16808:120;16755:179;:::o;16939:671::-;16978:3;17020:4;17002:16;16999:26;16996:39;;;16939:671;:::o;16996:39::-;17062:2;17056:9;-1:-1:-1;;17127:16:10;17123:25;;17120:1;17056:9;17099:50;17178:4;17172:11;17202:16;17237:18;17308:2;17301:4;17293:6;17289:17;17286:25;17281:2;17273:6;17270:14;17267:45;17264:58;;;17315:5;;;;;16939:671;:::o;17264:58::-;17352:6;17346:4;17342:17;17331:28;;17388:3;17382:10;17415:2;17407:6;17404:14;17401:27;;;17421:5;;;;;;16939:671;:::o;17401:27::-;17505:2;17486:16;17480:4;17476:27;17472:36;17465:4;17456:6;17451:3;17447:16;17443:27;17440:69;17437:82;;;17512:5;;;;;;16939:671;:::o;17437:82::-;17528:57;17579:4;17570:6;17562;17558:19;17554:30;17548:4;17528:57;:::i;:::-;-1:-1:-1;17601:3:10;;16939:671;-1:-1:-1;;;;;16939:671:10:o;18036:404::-;18238:2;18220:21;;;18277:2;18257:18;;;18250:30;18316:34;18311:2;18296:18;;18289:62;-1:-1:-1;;;18382:2:10;18367:18;;18360:38;18430:3;18415:19;;18036:404::o;18445:561::-;-1:-1:-1;;;;;18742:15:10;;;18724:34;;18794:15;;18789:2;18774:18;;18767:43;18841:2;18826:18;;18819:34;;;18884:2;18869:18;;18862:34;;;18704:3;18927;18912:19;;18905:32;;;18667:4;;18954:46;;18980:19;;18972:6;18954:46;:::i;:::-;18946:54;18445:561;-1:-1:-1;;;;;;;18445:561:10:o",
    "sourcePath": "c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/contracts/MintArenaAccessNFT.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.15+commit.e14f2714"
    },
    "ast": {
        "absolutePath": "c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/contracts/MintArenaAccessNFT.sol",
        "exportedSymbols": {
            "Address": [
                1866
            ],
            "Context": [
                1888
            ],
            "ERC1155": [
                1393
            ],
            "ERC165": [
                1912
            ],
            "IERC1155": [
                1515
            ],
            "IERC1155MetadataURI": [
                1571
            ],
            "IERC1155Receiver": [
                1556
            ],
            "IERC165": [
                1924
            ],
            "NftShop": [
                65
            ],
            "Ownable": [
                170
            ]
        },
        "id": 66,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    ">=",
                    "0.7",
                    ".0",
                    "<",
                    "0.9",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:31:0"
            },
            {
                "absolutePath": "c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
                "file": "c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 66,
                "sourceUnit": 1394,
                "src": "123:123:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "c:/Users/saman/Desktop/Pro-Chain-X/Smart Contracts/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 66,
                "sourceUnit": 171,
                "src": "248:116:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "ERC1155",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1393,
                            "src": "435:7:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "435:7:0"
                    },
                    {
                        "baseName": {
                            "id": 6,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 170,
                            "src": "444:7:0"
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "444:7:0"
                    }
                ],
                "canonicalName": "NftShop",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 65,
                "linearizedBaseContracts": [
                    65,
                    170,
                    1393,
                    1571,
                    1515,
                    1912,
                    1924,
                    1888
                ],
                "name": "NftShop",
                "nameLocation": "424:7:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "a035b1fe",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "474:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 65,
                        "src": "459:33:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 8,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "459:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "302e3031",
                            "id": 9,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "482:10:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000_by_1",
                                "typeString": "int_const 10000000000000000"
                            },
                            "value": "0.01"
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 16,
                            "nodeType": "Block",
                            "src": "527:2:0",
                            "statements": []
                        },
                        "id": 17,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "",
                                        "id": 13,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "522:2:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                        },
                                        "value": ""
                                    }
                                ],
                                "id": 14,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 12,
                                    "name": "ERC1155",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1393,
                                    "src": "514:7:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "514:11:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 11,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "511:2:0"
                        },
                        "returnParameters": {
                            "id": 15,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "527:0:0"
                        },
                        "scope": 65,
                        "src": "500:29:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 28,
                            "nodeType": "Block",
                            "src": "587:30:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 26,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 24,
                                            "name": "price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "596:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 25,
                                            "name": "_price",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 19,
                                            "src": "604:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "596:14:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 27,
                                    "nodeType": "ExpressionStatement",
                                    "src": "596:14:0"
                                }
                            ]
                        },
                        "functionSelector": "91b7f5ed",
                        "id": 29,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 22,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 21,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 112,
                                    "src": "577:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "577:9:0"
                            }
                        ],
                        "name": "setPrice",
                        "nameLocation": "545:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 20,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 19,
                                    "mutability": "mutable",
                                    "name": "_price",
                                    "nameLocation": "562:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 29,
                                    "src": "554:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 18,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "554:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "553:16:0"
                        },
                        "returnParameters": {
                            "id": 23,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "587:0:0"
                        },
                        "scope": 65,
                        "src": "536:81:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 63,
                            "nodeType": "Block",
                            "src": "694:335:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 43,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 38,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "771:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 39,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "771:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 40,
                                                            "name": "tokenId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 31,
                                                            "src": "783:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 37,
                                                        "name": "balanceOf",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 286,
                                                        "src": "761:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                                            "typeString": "function (address,uint256) view returns (uint256)"
                                                        }
                                                    },
                                                    "id": 41,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "761:30:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "hexValue": "30",
                                                    "id": 42,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "795:1:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_0_by_1",
                                                        "typeString": "int_const 0"
                                                    },
                                                    "value": "0"
                                                },
                                                "src": "761:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "455243313135353a20746f6b656e20616c7265616479206d696e746564",
                                                "id": 44,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "798:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_fa022145e751626071013e12c9ab13aad157a18b10f626b605829b32ec568ffc",
                                                    "typeString": "literal_string \"ERC1155: token already minted\""
                                                },
                                                "value": "ERC1155: token already minted"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_fa022145e751626071013e12c9ab13aad157a18b10f626b605829b32ec568ffc",
                                                    "typeString": "literal_string \"ERC1155: token already minted\""
                                                }
                                            ],
                                            "id": 36,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "753:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 45,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "753:77:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46,
                                    "nodeType": "ExpressionStatement",
                                    "src": "753:77:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 51,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 48,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "903:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 49,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "903:9:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 50,
                                                    "name": "price",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10,
                                                    "src": "916:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "903:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4e6f7420656e6f75676820657468657220666f72207472616e73616374696f6e",
                                                "id": 52,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "923:34:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_ea767dc20afc293b7f33ee481820682168d65d3d6fe654fb27341624af7f504a",
                                                    "typeString": "literal_string \"Not enough ether for transaction\""
                                                },
                                                "value": "Not enough ether for transaction"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_ea767dc20afc293b7f33ee481820682168d65d3d6fe654fb27341624af7f504a",
                                                    "typeString": "literal_string \"Not enough ether for transaction\""
                                                }
                                            ],
                                            "id": 47,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "895:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 53,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "895:63:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 54,
                                    "nodeType": "ExpressionStatement",
                                    "src": "895:63:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 56,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "999:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 57,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "999:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "hexValue": "30",
                                                "id": 58,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1011:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            {
                                                "hexValue": "31",
                                                "id": 59,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1014:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                            },
                                            {
                                                "id": 60,
                                                "name": "data",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 33,
                                                "src": "1017:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                }
                                            ],
                                            "id": 55,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 827,
                                            "src": "993:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                                "typeString": "function (address,uint256,uint256,bytes memory)"
                                            }
                                        },
                                        "id": 61,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "993:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 62,
                                    "nodeType": "ExpressionStatement",
                                    "src": "993:29:0"
                                }
                            ]
                        },
                        "functionSelector": "9224a33f",
                        "id": 64,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintNFT",
                        "nameLocation": "633:7:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 34,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 31,
                                    "mutability": "mutable",
                                    "name": "tokenId",
                                    "nameLocation": "649:7:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 64,
                                    "src": "641:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 30,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "641:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 33,
                                    "mutability": "mutable",
                                    "name": "data",
                                    "nameLocation": "671:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 64,
                                    "src": "658:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes"
                                    },
                                    "typeName": {
                                        "id": 32,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "658:5:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_storage_ptr",
                                            "typeString": "bytes"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "640:36:0"
                        },
                        "returnParameters": {
                            "id": 35,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "694:0:0"
                        },
                        "scope": 65,
                        "src": "624:405:0",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 66,
                "src": "415:617:0",
                "usedErrors": []
            }
        ],
        "src": "33:999:0"
    },
    "functionHashes": {
        "balanceOf(address,uint256)": "00fdd58e",
        "balanceOfBatch(address[],uint256[])": "4e1273f4",
        "isApprovedForAll(address,address)": "e985e9c5",
        "mintNFT(uint256,bytes)": "9224a33f",
        "owner()": "8da5cb5b",
        "price()": "a035b1fe",
        "renounceOwnership()": "715018a6",
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
        "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setPrice(uint256)": "91b7f5ed",
        "supportsInterface(bytes4)": "01ffc9a7",
        "transferOwnership(address)": "f2fde38b",
        "uri(uint256)": "0e89341c"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1269400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "balanceOf(address,uint256)": "2695",
            "balanceOfBatch(address[],uint256[])": "infinite",
            "isApprovedForAll(address,address)": "infinite",
            "mintNFT(uint256,bytes)": "infinite",
            "owner()": "2390",
            "price()": "2351",
            "renounceOwnership()": "28184",
            "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
            "safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "26705",
            "setPrice(uint256)": "24487",
            "supportsInterface(bytes4)": "567",
            "transferOwnership(address)": "28400",
            "uri(uint256)": "infinite"
        }
    }
}